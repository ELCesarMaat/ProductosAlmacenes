// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductosAlmacenes;

#nullable disable

namespace ProductosAlmacenes.Migrations
{
    [DbContext(typeof(AlmacenDbContext))]
    [Migration("20241123200608_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductosAlmacenes.Model.Almacen", b =>
                {
                    b.Property<int>("AlmacenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlmacenID"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlmacenID");

                    b.ToTable("Almacenes");
                });

            modelBuilder.Entity("ProductosAlmacenes.Model.Existencia", b =>
                {
                    b.Property<int>("ExistenciaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExistenciaID"));

                    b.Property<int>("AlmacenID")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductoID")
                        .HasColumnType("int");

                    b.HasKey("ExistenciaID");

                    b.HasIndex("AlmacenID");

                    b.HasIndex("ProductoID");

                    b.ToTable("Existencias");
                });

            modelBuilder.Entity("ProductosAlmacenes.Model.Producto", b =>
                {
                    b.Property<int>("ProductoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoID"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ProductoID");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("ProductosAlmacenes.Model.Existencia", b =>
                {
                    b.HasOne("ProductosAlmacenes.Model.Almacen", "Almacen")
                        .WithMany("Existencias")
                        .HasForeignKey("AlmacenID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductosAlmacenes.Model.Producto", "Producto")
                        .WithMany("Existencias")
                        .HasForeignKey("ProductoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Almacen");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("ProductosAlmacenes.Model.Almacen", b =>
                {
                    b.Navigation("Existencias");
                });

            modelBuilder.Entity("ProductosAlmacenes.Model.Producto", b =>
                {
                    b.Navigation("Existencias");
                });
#pragma warning restore 612, 618
        }
    }
}
