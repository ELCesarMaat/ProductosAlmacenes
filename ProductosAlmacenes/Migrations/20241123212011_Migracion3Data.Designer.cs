// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductosAlmacenes;

#nullable disable

namespace ProductosAlmacenes.Migrations
{
    [DbContext(typeof(AlmacenDbContext))]
    [Migration("20241123212011_Migracion3Data")]
    partial class Migracion3Data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Movimiento", b =>
                {
                    b.Property<int>("MovimientoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovimientoID"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductoID")
                        .HasColumnType("int");

                    b.Property<int>("TipoMovimientoID")
                        .HasColumnType("int");

                    b.Property<int>("UbicacionID")
                        .HasColumnType("int");

                    b.HasKey("MovimientoID");

                    b.HasIndex("ProductoID");

                    b.HasIndex("TipoMovimientoID");

                    b.HasIndex("UbicacionID");

                    b.ToTable("Movimientos");
                });

            modelBuilder.Entity("ProductosAlmacenes.Model.Almacen", b =>
                {
                    b.Property<int>("AlmacenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlmacenID"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaDeAlta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UbicacionGeografica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlmacenID");

                    b.ToTable("Almacenes");
                });

            modelBuilder.Entity("ProductosAlmacenes.Model.Producto", b =>
                {
                    b.Property<int>("ProductoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoID"));

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("UPC")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProductoID");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("ProductosAlmacenes.Model.TipoMovimiento", b =>
                {
                    b.Property<int>("TipoMovimientoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoMovimientoID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoMovimientoID");

                    b.ToTable("TipoMovimientos");

                    b.HasData(
                        new
                        {
                            TipoMovimientoID = 1,
                            Nombre = "Entrada"
                        },
                        new
                        {
                            TipoMovimientoID = 2,
                            Nombre = "Salida"
                        });
                });

            modelBuilder.Entity("ProductosAlmacenes.Model.UbicacionAlmacen", b =>
                {
                    b.Property<int>("UbicacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UbicacionID"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("AlmacenID")
                        .HasColumnType("int");

                    b.Property<int>("Estante")
                        .HasColumnType("int");

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.Property<int>("Pasillo")
                        .HasColumnType("int");

                    b.HasKey("UbicacionID");

                    b.HasIndex("AlmacenID");

                    b.ToTable("UbicacionAlmacenes");
                });

            modelBuilder.Entity("Movimiento", b =>
                {
                    b.HasOne("ProductosAlmacenes.Model.Producto", "Producto")
                        .WithMany("Movimientos")
                        .HasForeignKey("ProductoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductosAlmacenes.Model.TipoMovimiento", "TipoMovimiento")
                        .WithMany("Movimientos")
                        .HasForeignKey("TipoMovimientoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductosAlmacenes.Model.UbicacionAlmacen", "Ubicacion")
                        .WithMany("Movimientos")
                        .HasForeignKey("UbicacionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("TipoMovimiento");

                    b.Navigation("Ubicacion");
                });

            modelBuilder.Entity("ProductosAlmacenes.Model.UbicacionAlmacen", b =>
                {
                    b.HasOne("ProductosAlmacenes.Model.Almacen", "Almacen")
                        .WithMany("Ubicaciones")
                        .HasForeignKey("AlmacenID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Almacen");
                });

            modelBuilder.Entity("ProductosAlmacenes.Model.Almacen", b =>
                {
                    b.Navigation("Ubicaciones");
                });

            modelBuilder.Entity("ProductosAlmacenes.Model.Producto", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("ProductosAlmacenes.Model.TipoMovimiento", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("ProductosAlmacenes.Model.UbicacionAlmacen", b =>
                {
                    b.Navigation("Movimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
